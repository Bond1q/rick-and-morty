{"version":3,"file":"static/js/723.16d42d8b.chunk.js","mappings":"gOAuBA,EApBgB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACpC,OACC,iBAAKC,QAAS,kBAAMD,EAAUD,IAAKG,UAAU,UAA7C,WACC,iBAAKA,UAAU,QAAf,gBACKL,MAEL,gBAAKK,UAAU,eAAf,SACEJ,QC6BL,EAlCoB,SAAC,GAA0C,IAAxCK,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,SAAUJ,EAAgB,EAAhBA,UAEvCK,EAAkBD,EAASE,KAAI,SAACC,GACrC,OAAO,SAAC,EAAD,CACNR,GAAIQ,EAAQR,GACZF,MAAOU,EAAQC,aACfV,MAAOS,EAAQT,MAEfE,UAAWA,GADNO,EAAQC,iBAIf,OACC,iBAAKN,UAAU,cAAf,WACC,iBAAKA,UAAU,QAAf,oBAA+BC,MAC/B,iBAAKD,UAAU,aAAf,WACC,gBAAKA,UAAU,SAAf,SAAyBG,EAAgBI,MAAM,EAAGC,KAAKC,MAAMN,EAAgBO,OAAS,OACtF,gBAAKV,UAAU,SAAf,SAAyBG,EAAgBI,MAAMC,KAAKC,MAAMN,EAAgBO,OAAS,a,UCoBvF,EAlCoB,WACnB,OAA6BC,EAAAA,EAAAA,KAAY,gBAAGC,EAAH,EAAGA,cAAH,MAAuB,CAACA,EAAcC,QAASD,EAAcE,cAAtG,eAAOD,EAAP,KAAgBC,EAAhB,KACMhB,GAAYiB,EAAAA,EAAAA,MACZC,EAAoB,SAACnB,GAC1BC,EAAU,YAAD,OAAaD,KAGjBoB,EAAuBJ,EAAQT,KAAI,SAACc,GAEzC,OAAO,SAAC,EAAD,CACNpB,UAAWkB,EACXf,YAAaiB,EAAOjB,YACpBC,SAAUgB,EAAOhB,UACZgB,EAAOjB,gBAERkB,GAAWC,EAAAA,EAAAA,MAMjB,OALAC,EAAAA,EAAAA,YAAU,WACTF,GAASG,EAAAA,EAAAA,SACP,KAIF,8BACER,GAAY,SAACS,EAAA,EAAD,KACZ,iBAAKvB,UAAU,cAAf,WACC,gBAAKA,UAAU,YAAf,sBACA,gBAAKA,UAAU,gBAAf,SAAgCiB","sources":["Components/Seasons/Episode.jsx","Components/Seasons/SeasonBlock.jsx","Pages/SeasonsPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Episode = ({ index, title, id, urlChange }) => {\r\n\treturn (\r\n\t\t<div onClick={() => urlChange(id)} className='episode'>\r\n\t\t\t<div className=\"index\">\r\n\t\t\t\tEP {index}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"episodeTitle\">\r\n\t\t\t\t{title}\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nEpisode.propTypes = {\r\n\tindex: propTypes.number.isRequired,\r\n\ttitle: propTypes.string.isRequired,\r\n\tid: propTypes.number,\r\n\turlChange: propTypes.func\r\n}\r\nexport default Episode;","import React from 'react';\r\nimport Episode from './Episode';\r\nimport '../../styles/seasonBlock.scss'\r\nimport propTypes from 'prop-types';\r\n\r\nconst SeasonBlock = ({ seasonIndex, episodes, urlChange }) => {\r\n\r\n\tconst episodesToProps = episodes.map((episode) => {\r\n\t\treturn <Episode\r\n\t\t\tid={episode.id}\r\n\t\t\tindex={episode.episodeIndex}\r\n\t\t\ttitle={episode.title}\r\n\t\t\tkey={episode.episodeIndex}\r\n\t\t\turlChange={urlChange}\r\n\t\t/>\r\n\t})\r\n\treturn (\r\n\t\t<div className='seasonBlock'>\r\n\t\t\t<div className=\"title\">Season {seasonIndex}</div>\r\n\t\t\t<div className='blockItems'>\r\n\t\t\t\t<div className=\"colum1\">{episodesToProps.slice(0, Math.floor(episodesToProps.length / 2))}</div>\r\n\t\t\t\t<div className=\"colum2\">{episodesToProps.slice(Math.floor(episodesToProps.length / 2))}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSeasonBlock.propTypes = {\r\n\tseasonIndex: propTypes.number,\r\n\tepisodes: propTypes.arrayOf(\r\n\t\tpropTypes.shape({\r\n\t\t\tepisodeIndex: propTypes.number,\r\n\t\t\ttitle: propTypes.string,\r\n\t\t\tid: propTypes.number\r\n\t\t})\r\n\t),\r\n\turlChange: propTypes.func\r\n}\r\n\r\nexport default SeasonBlock;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllSeasons } from './../redux/reducers/seasonsReducer/actionCreator';\r\nimport Loader from '../Components/Loader';\r\nimport SeasonBlock from '../Components/Seasons/SeasonBlock';\r\nimport '../styles/seasonsPage.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nconst SeasonsPage = () => {\r\n\tconst [seasons, isLoading] = useSelector(({ seasonReducer }) => [seasonReducer.seasons, seasonReducer.isLoading])\r\n\tconst urlChange = useNavigate()\r\n\tconst setEpisodeIdInUrl = (id) => {\r\n\t\turlChange(`/seasons/${id}`)\r\n\t}\r\n\r\n\tconst seasonsBlocksToProps = seasons.map((season) => {\r\n\r\n\t\treturn <SeasonBlock\r\n\t\t\turlChange={setEpisodeIdInUrl}\r\n\t\t\tseasonIndex={season.seasonIndex}\r\n\t\t\tepisodes={season.episodes}\r\n\t\t\tkey={season.seasonIndex} />\r\n\t})\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => {\r\n\t\tdispatch(getAllSeasons())\r\n\t}, [])\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? <Loader /> :\r\n\t\t\t\t<div className='seasonsPage'>\r\n\t\t\t\t\t<div className=\"mainTitle\">Seasons</div>\r\n\t\t\t\t\t<div className=\"seasonsBlocks\">{seasonsBlocksToProps}</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SeasonsPage;"],"names":["index","title","id","urlChange","onClick","className","seasonIndex","episodes","episodesToProps","map","episode","episodeIndex","slice","Math","floor","length","useSelector","seasonReducer","seasons","isLoading","useNavigate","setEpisodeIdInUrl","seasonsBlocksToProps","season","dispatch","useDispatch","useEffect","getAllSeasons","Loader"],"sourceRoot":""}